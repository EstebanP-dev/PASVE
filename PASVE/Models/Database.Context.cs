//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PASVE.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PASVEEntities : DbContext
    {
        public PASVEEntities()
            : base("name=PASVEEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Career> Careers { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
    
        public virtual int SP_CAREERS_DELETE(Nullable<System.Guid> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAREERS_DELETE", iDParameter);
        }
    
        public virtual int SP_CAREERS_INSERT(string nAME, Nullable<decimal> cREDITVALUE, Nullable<decimal> tOTALCREDITS, Nullable<System.Guid> dEPARTMENT, Nullable<bool> aCTIVE)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var cREDITVALUEParameter = cREDITVALUE.HasValue ?
                new ObjectParameter("CREDITVALUE", cREDITVALUE) :
                new ObjectParameter("CREDITVALUE", typeof(decimal));
    
            var tOTALCREDITSParameter = tOTALCREDITS.HasValue ?
                new ObjectParameter("TOTALCREDITS", tOTALCREDITS) :
                new ObjectParameter("TOTALCREDITS", typeof(decimal));
    
            var dEPARTMENTParameter = dEPARTMENT.HasValue ?
                new ObjectParameter("DEPARTMENT", dEPARTMENT) :
                new ObjectParameter("DEPARTMENT", typeof(System.Guid));
    
            var aCTIVEParameter = aCTIVE.HasValue ?
                new ObjectParameter("ACTIVE", aCTIVE) :
                new ObjectParameter("ACTIVE", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAREERS_INSERT", nAMEParameter, cREDITVALUEParameter, tOTALCREDITSParameter, dEPARTMENTParameter, aCTIVEParameter);
        }
    
        public virtual int SP_CAREERS_UPDATE(Nullable<System.Guid> iD, string nAME, Nullable<decimal> cREDITVALUE, Nullable<decimal> tOTALCREDITS, Nullable<System.Guid> dEPARTMENT, Nullable<bool> aCTIVE)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var cREDITVALUEParameter = cREDITVALUE.HasValue ?
                new ObjectParameter("CREDITVALUE", cREDITVALUE) :
                new ObjectParameter("CREDITVALUE", typeof(decimal));
    
            var tOTALCREDITSParameter = tOTALCREDITS.HasValue ?
                new ObjectParameter("TOTALCREDITS", tOTALCREDITS) :
                new ObjectParameter("TOTALCREDITS", typeof(decimal));
    
            var dEPARTMENTParameter = dEPARTMENT.HasValue ?
                new ObjectParameter("DEPARTMENT", dEPARTMENT) :
                new ObjectParameter("DEPARTMENT", typeof(System.Guid));
    
            var aCTIVEParameter = aCTIVE.HasValue ?
                new ObjectParameter("ACTIVE", aCTIVE) :
                new ObjectParameter("ACTIVE", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CAREERS_UPDATE", iDParameter, nAMEParameter, cREDITVALUEParameter, tOTALCREDITSParameter, dEPARTMENTParameter, aCTIVEParameter);
        }
    }
}
